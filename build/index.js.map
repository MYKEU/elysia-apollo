{"version":3,"sources":["../src/index.ts"],"sourcesContent":["import type { Plugin } from 'kingworld'\n\nimport { readdirSync, existsSync } from 'fs'\nimport { join } from 'path'\n\nfunction* walkSync(dir: string): Generator<string> {\n    const files = readdirSync(dir, { withFileTypes: true })\n    for (const file of files) {\n        if (file.isDirectory()) yield* walkSync(join(dir, file.name))\n        else yield join(dir, file.name)\n    }\n}\n\nconst getFiles = (dir: string) => {\n    const files: string[] = []\n    for (const filePath of walkSync(dir)) files.push(filePath)\n\n    return files\n}\n\nconst staticPlugin: Plugin<{\n    /**\n     * @default \"public\"\n     *\n     * Path to expose as public path\n     */\n    path?: string\n    /**\n     * @default '/public'\n     *\n     * Path prefix to create virtual mount path for the static directory\n     */\n    prefix?: string\n    /**\n     * @default 1024\n     *\n     * If total files exceed this number,\n     * file will be handled via wildcard instead of static route\n     * to reduce memory usage\n     */\n    staticLimit?: number\n    /**\n     * @default false\n     *\n     * If set to true, file will always use static path instead\n     */\n    alwaysStatic?: boolean\n    /**\n     * @default [] `Array<string | RegExp>`\n     *\n     * Array of file to ignore publication.\n     * If one of the patters is matched,\n     * file will not be exposed.\n     */\n    ignorePatterns?: Array<string | RegExp>\n}> = (\n    app,\n    {\n        path = 'public',\n        prefix = '/public',\n        staticLimit = 1024,\n        alwaysStatic = false,\n        ignorePatterns = []\n    } = {\n        path: 'public',\n        prefix: '/public',\n        staticLimit: 1024,\n        alwaysStatic: process.env.NODE_ENV === 'production',\n        ignorePatterns: []\n    }\n) => {\n    const files = getFiles(path)\n\n    const shouldIgnore = (file: string) =>\n        ignorePatterns.find((pattern) => {\n            if (typeof pattern === 'string') return pattern.includes(file)\n            else return pattern.test(file)\n        })\n\n    if (\n        alwaysStatic ||\n        (process.env.NODE_ENV === 'production' && files.length <= staticLimit)\n    )\n        files.forEach((file) => {\n            if (shouldIgnore(file)) return\n\n            app.get(`/${join(prefix, file.replace(`${path}/`, ''))}`, () =>\n                Bun.file(file)\n            )\n        })\n    else\n        app.get<{\n            params: {\n                '*': string\n            }\n        }>(`${prefix}/*`, ({ params }) => {\n            const file = `${path}/${params['*']}`\n\n            if (shouldIgnore(file))\n                return new Response('Not Found', {\n                    status: 404\n                })\n\n            return existsSync(file)\n                ? Bun.file(file)\n                : new Response('Not Found', {\n                      status: 404\n                  })\n        })\n\n    return app\n}\n\nexport default staticPlugin\n"],"names":["walkSync","dir","files","readdirSync","withFileTypes","file","isDirectory","join","name","getFiles","filePath","push","staticPlugin","app","path","prefix","staticLimit","alwaysStatic","ignorePatterns","process","env","NODE_ENV","shouldIgnore","find","pattern","includes","test","length","forEach","get","replace","Bun","params","Response","status","existsSync"],"mappings":"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"}